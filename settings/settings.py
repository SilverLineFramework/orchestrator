"""Django settings for orchestrator project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import json
import logging
from .logging import configure_log

from django.core.management.commands.runserver import Command as runserver


def _load(filename):
    try:
        with open(filename) as f:
            return json.load(f)
    except FileNotFoundError:
        return {}


# --------------------------------------------------------------------------- #
#                                    Core                                     #
# --------------------------------------------------------------------------- #

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
CONFIG_PATH = "config.json"
_config = _load(CONFIG_PATH)

# LOG_DIR = os.path.join(_config.get("log_dir", "log"), "orchestrator/")
LOG_DIR = None
if os.environ.get('RUN_MAIN', None) == 'true':
    configure_log(LOG_DIR, level=0)

_conf = logging.getLogger("conf")

runserver.default_port = _config.get("http_port", 8000)
runserver.default_addr = _config.get("http", "localhost")

REALM = _config.get('realm', 'realm')
MQTT_LOG = "/".join([REALM, "proc", "log", "orchestrator"])

# --------------------------------- Security -------------------------------- #

# Includes 'localhost' if running in DEBUG=True.
# https://docs.djangoproject.com/en/4.0/ref/settings/#allowed-hosts
ALLOWED_HOSTS = []
if "http" in _config:
    ALLOWED_HOSTS.append(_config.get("http", "localhost"))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = _config.get("debug", True)

# Load key file; forgives errors if running in debug mode.
_key_file = _load("key.json")
try:
    SECRET_KEY = _key_file["key"]
except KeyError:
    if not DEBUG:
        raise Exception("Secret key file `key.json` not found.")
    else:
        _conf.warn("No secret key file was found (ok for debug)")
        SECRET_KEY = "NOT_A_SECRET_KEY"

# ------------------------------ Server Sources ----------------------------- #

# Application definition
INSTALLED_APPS = [
    'orchestrator.apps.orchestratorConfig',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
]

# All default
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'settings.urls'
WSGI_APPLICATION = 'settings.wsgi.application'
APPEND_SLASH = True

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
